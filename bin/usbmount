#!/bin/bash

# List un-mounted USB partitions. If first argument is not empty, include non-removables, else include only
# non-removables.
list_unmounted() {
	# First get a list of USB devices.
	for disk in $(lsblk -oPATH,TRAN | awk '{if ($2 == "usb") {print $1}}'); do
		# For each disk, get a list of its un-mounted and labeled partitions.
		if test -n "$1"; then
			# Include non-removables.
			lsblk -oLABEL,PATH,SIZE,RM,MOUNTPOINT -n $disk | awk '{if (NF == 4) {print}}'
		else
			# Include only removables.
			lsblk -oLABEL,PATH,SIZE,RM,MOUNTPOINT -n $disk | awk '{if (NF == 4 && $4 == 1) {print}}'
		fi
	done
}

# This script must be run as root/sudo.
if [ $(id -u) -ne 0 ]; then
	echo ERROR: must run as root/sudo.
	exit 1
fi

# Support "lall" option, which include non-removable USB storages.
if [ $# -gt 0 ]; then
	if [ "$1" == "all" ]; then
		all=yes
	else
		echo Unknown option. Use \"all\" to include non-removable USB storage. 
		exit 1
	fi
fi

found=0
mount=0

while IFS= read -r -u 3 line; do
	let found+=1
	read -r label dev size rm dir <<< $line
	read -r -p "Found unmounted $label ($dev, $size). Mount? (y/[n])" response
	case $response in
		[yY])
			let mount+=1
			dir="/mnt/$label"
			echo Mounting $label to \"$dir\" ...
			test -d "$dir" || mkdir -p "$dir"
			# Mount owner will be the user and group running sudo.
			mount $dev "$dir" -o umask=0022,gid=$SUDO_GID,uid=$SUDO_UID
			;;
		*)
			;;
	esac
done 3< <(list_unmounted $all)

if ! (( $found )); then
	echo No new USB partition found.
elif ! (( $mount )); then
	echo No new USB partiton was mounted.
else
	echo $mount/$found new USB partition was mounted.
fi

echo NOTE: Use \"all\" to include non-removable USB storage. 
